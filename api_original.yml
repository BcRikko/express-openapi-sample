swagger: '2.0'
basePath: '/v1'
info:
  version: "1.0"
  title: Todo Application API
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /tasks:
    get:
      summary: タスク一覧の取得
      description: |
        タスク一覧を取得します
      operationId: getTaskList
      parameters:
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: タスク一覧を取得しました
          schema:
            type: array
            items:
              $ref: '#/definitions/TaskList'
        404:
          description: タスク一覧が取得できませんでした
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: 予期しないエラー
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: タスクの登録
      description: |
        タスクを登録します
      operationId: createTask
      parameters:
        -
          name: task
          in: body
          schema:
            $ref: '#/definitions/TaskToPost'
      responses:
        201:
          description: タスクを登録しました
          schema:
            $ref: '#/definitions/TaskOne'
        400:
          description: タスクが登録できませんでした
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: 予期しないエラー
          schema:
            $ref: '#/definitions/Error'
  /tasks/{id}:
    get:
      summary: 指定IDタスクの取得
      description: |
        パスに指定されたIDのタスクを取得します
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
          description: タスクを取得しました
          schema:
            $ref: '#/definitions/TaskOne'
        404:
          description: 指定IDのタスクが見つかりませんでした
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: 予期しないエラー
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: 指定IDタスクの更新
      description: |
        パスに指定されたIDのタスクを更新します
      parameters:
        - $ref: '#/parameters/id'
        -
          name: task
          in: body
          schema:
            $ref: '#/definitions/TaskToPut'
      responses:
        200:
          description: タスクを更新しました
          schema:
            $ref: '#/definitions/TaskOne'
        400:
          description: タスクが更新できませんでした
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: 予期しないエラー
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: 指定IDタスクの削除
      description: |
        パスに指定されたIDのタスクを削除します
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
          description: タスクを削除しました
        400:
          description: タスクが削除できませんでした
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: 予期しないエラー
          schema:
            $ref: '#/definitions/Error'

parameters:
  id:
    description: タスクID
    name: id
    in: path
    required: true
    type: integer
    format: int32
  offset:
    description: 取得するレコードの開始位置
    name: offset
    in: query
    type: integer
    format: int32
    minimum: 0
  limit:
    description: 取得するレコードの件数
    name: limit
    in: query
    type: integer
    format: int32
    minimum: 1

definitions:
  Error:
    type: object
    readOnly: true
    properties:
      code:
        description: HTTPステータスコード
        type: integer
        format: int32
      message:
        description: エラーメッセージ
        type: string
  Task:
    type: object
    readOnly: true
    properties:
      id:
        description: タスクのID
        type: integer
        format: int32
      title:
        description: タスクの名前
        type: string
      is_done:
        description: タスクの状態
        default: false
        type: boolean
  TaskList:
    type: object
    readOnly: true
    properties:
      tasks:
        type: array
        items:
          $ref: '#/definitions/Task'
  TaskOne:
    type: object
    readOnly: true
    properties:
      task:
        $ref: '#/definitions/Task'
  TaskToPost:
    type: object
    required:
      - title
    properties:
      title:
        description: タスクの名前
        type: string
        minLength: 1
        maxLength: 64
      is_done:
        description: タスクの状態
        default: false
        type: boolean
  TaskToPut:
    type: object
    properties:
      title:
        description: タスクの名前
        type: string
        minLength: 1
        maxLength: 64
      is_done:
        description: タスクの状態
        type: boolean